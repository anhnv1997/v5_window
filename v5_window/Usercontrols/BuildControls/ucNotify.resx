<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picNotiType.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABc1JREFUeF7l
        W1lsG1UUNfuO2MRSBPwggSgpoKj1kgDmgyTjSUqhGFVik+CnFInyQaARRVSAgA9++oNASHyAKqEgkRSP
        Jw4gKiH4QCpijYCoIhVLgUAlyvLRxSnnTq6x83xtj8fveWbIkU7s+N17331v3rtvnUS3kN2VPTk5NbQq
        U8ytT7nWA+libgs+nyd634u5jZSG7z0ky2rxxZq3bj037dj5tGu9jELNggvgUZ8sg6TzUsa1bu937LPZ
        bLRhudZJKce+DY5PgodAqXBBeBCcQGWuWzmeP5Gziw76dq5dgSa8HU7+UeO0EaKb/Ebd5vrS4EWcfXig
        Jw6HtsKxP1VHu8AD4Fjv7t4T2J3uIlUYzsKBb2ocCoszeAg3sFvmQU+dA5vkTFhcoC5oPD5QX0dmHymZ
        R4kfrC7mLmR39QLGe8B9NZlFlXv7poauYLf1AEap8D/XZBJ17usrDa5k9ztD0rWuoqFHyCTS9HwujFzJ
        xQiGdGH4YhibU43HiHsCxwSKqKjF3YLRuPHjQHMFTGlfEIzFlc9xsfyBJhZQogWJZCyOPIKFWYaL1xze
        RGdxJSYZijNnfHUFCI4qiv8fOtbDXEwZ2Yl1Z0HQ+IouKDko70Bz/ktN88n9mM2ewcWtBzKglZ2kGDox
        138/uyt7PPt5GSrhPUnOB7d4hVWxanrgNCxyfhcUosADVGh2dRFHE8dkHHsT0v5RZFtxPj2eP4WtVJFy
        rTsF4WjQse9nN+uASrhL1GlC6Gxg9Srw9EuScATosIsi+gvD1wg6rVhg9UUkd669AD8eUYSiQApaK9hN
        Eegarwh6rXiINm3ZhGfkbkEodMKvW9hFEbwBK+q24pJugAj7qiQUMneweyIy0wPnQ2Ze0fFNajlsypv8
        7FEFQuYvvYWR89g9EZB5TdFpi6iAbz1DGFtPxw/tHFqY5kKymLvZc64B0GLvEPTaZRmVfCpF/+uExNC4
        pGkKoPW9rvkKHdXpqk1d/IGm41xWEZgTvCnoBSIqez31pQfVhJBY7nPsm7icIhD17xX0AhMPfyPNpB6T
        ErtNOLOdyymivzByKeR0L9RGqQs8LSR0lRSRvYDUCJj3d7D4aUzHfiqRca1nxMQAREG+h72BpGP34v8P
        1fQGLEOv6dEWgt59gl7HpIevswvMrp4euIR9ruwsFRQZiU3369Klwcsh87eio4ujVAG0pJQS/dOxv5K2
        n2lnGelv18lX+TlVFIvXIT+ePw4yfltS2/SCIP50PAyiEq9mn+tAa2/IvKvqgIfTheE1LCYCMkZHKG8Y
        xJ9rpcQ2eDCxbdux7LMIroTpWj2KPZwswnDTr7AnQdEXXzqdCo+x3w1BF58gN0XyaHWfNT3KRoVCzljT
        Z5b/u4yFfzpfDLXacQW4Eia9KWgTIKY8UmdfM2no5eyQoaYLDzC6lU0GBlUObNGlKDEPXUTcepGz9PbV
        NkhCQdhJJVC3oO4h2dVNun7H2WrfEqN4splNtwW0xCcUW6a4dEuMgIVGURAMTNh7nE37Ag2J0Dus2jHE
        Sc62Cp3doEK/lcDD5NeqvjE6dp6zrsLQwYiv7gCZZ2t0TFM+GCEgcUwR1sJmLQGVfiNkuncUjyGWs65H
        0rXOhND+OiUNlCqB9yO/U2UNcp5aOmcvA0KmjsfpMuOTKLR3wEmfGDLfEOTM0cdkLUGXCGh1JxrQwzlU
        xOv4/FL53ShpflGp/JbAk1m+V2QqoD4rGIolU671KBerDSyuyLzVW8w5QXuKXKr2QMdTtGoSjMaFM+nS
        4DlcnGDg26J7FcNx4Fyro3XfoC0vTFh+EjKJKn/Udlm6AnpHB4Y/VTKKHl3rE2PvDNASEjHhHTHjaNA1
        /4odndJggQPqfC2uU5IvmwNH+yDgRcwXNU6EQprhJaeG+tmt7oLn8w+BYbxQ8SuC8yY6PGF3woN3AuRa
        98CpblyynqW8mm6rhwU65sIUevm9OithWb483QyIFxF8fT6R+Bf9zTcMA+yFywAAAABJRU5ErkJggg==
</value>
  </data>
</root>