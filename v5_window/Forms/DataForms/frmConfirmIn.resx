<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ERERERERERERERERERERERERERERERERERERERERERERERERERFRDQH/D1/dXbxWX9L8AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>