<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>