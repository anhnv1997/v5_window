<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        eqOJwOea0cvGC62cS9vDu/J4ss3B0831JeMJ13iseY5H8ngiAaAkArAcrQPgCACBCQAEJgAQmABAYAIA
        gQkABCYAEJgAQGACAIEJAAQmABCYAEBgAgCBCQAEJgAQmABAYAIAgQkABCYAEJgAQGACAIEJAAQmABCY
        AEBgAgCBCQAEJgAQmABAYAIAgQkABCYAEJgAQGACAIEJAAQmABCYAEBgAgCBCQAEJgAQmABAYAIAgQkA
        BCYAEJgAQGACAIEJAAQmABCYAEBgAgCBCQAEJgAQmABAYAIAgQkABCYAEJgAQGACAIEJAAQmABCYAEBg
        AgCBCQAEJgAQmABAYAIAgQkABCYAEJgAQGACAIEJAAQmABCYAEBgAgCBCQAEJgAQmABAYAIAgQkABCYA
        EJgAQGACAIEJAAQmABCYAEBgAgCBCQAEJgAQmABAYAIAgQkABCYAEJgAQGACAIEJAAQmABBYle/TbQ7O
        NNfD4wmsxLm0PbwrjyfbHPyxud4xnnCNx5vn+P48nkgAKEn7ALAUjgAQmABAYAIAgQkABCYAEJgAQGAC
        AIEJAAQmABCYAEBgAgCBCQAEJgAQmABAYAIAgQkABCYAEJgAQGACAIEJAAQmABCYAEBgAgCBCQAEJgAQ
        mABAYAIAgQkABCYAEJgAQGACAIEJAAQmABCYAEBgVb5Pt7n/i80vf02ewfJV6a9pa3gyzwAAAAAAAAAA
        AACYIKX/AIzod7+hrhArAAAAAElFTkSuQmCC
</value>
  </data>
</root>